---
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { motion } from 'framer-motion';
import { clsx } from 'clsx';

import ThemeToggle from '@components/ThemeToggle';

import navItems from './navItems';
import { BLUE_COLOR, FONT_COLOR } from '@constants/index';

const activePathName = new URL(Astro.request.url).pathname;

const isActive = (pathName: string) => pathName == activePathName;
---

<div class="flex justify-center items-center">
  <div
    class="fixed bottom-[1.5rem] z-1 flex justify-center items-center gap-[0.7rem] bg-white dark:bg-darkBottomBarBackground border-[1px] border-bottomBarIconBgColor dark:border-slate-700 rounded-3xl p-[0.2rem] px-[1.25rem] shadow-bottomBarShadow dark:shadow-darkBottomBarShadow transform-preserve-3d"
  >
    {
      navItems.map((navItem) => {
        return (
          <a href={navItem.route}>
            <motion.div
              className={clsx(
                'bg-bottomBarIconBgColor dark:bg-darkBackground rounded-2xl p-[1rem]',
                isActive(navItem.route) && 'fa-bounce dark:bg-blue'
              )}
            >
              <FontAwesomeIcon
                icon={navItem.icon}
                size={isActive(navItem.route) ? '3x' : '2x'}
                color={isActive(navItem.route) ? BLUE_COLOR : FONT_COLOR}
                className={clsx(
                  isActive(navItem.route)
                    ? 'text-blue dark:text-white'
                    : 'text-fontColor dark:text-slate-400'
                )}
                client:load
              />
            </motion.div>
          </a>
        );
      })
    }
    <div class="border-l-[1px] border-fontColor h-[3rem]"></div>
    <ThemeToggle client:load />
  </div>

  <script is:inline>
    const theme = (() => {
      if (
        typeof localStorage !== 'undefined' &&
        localStorage.getItem('theme')
      ) {
        return localStorage.getItem('theme');
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
      return 'light';
    })();

    if (theme === 'light') {
      document.documentElement.classList.remove('dark');
    } else {
      document.documentElement.classList.add('dark');
    }
    window.localStorage.setItem('theme', theme);
  </script>
</div>
